@page "/einlesen"
@using Microsoft.AspNetCore.Components.WebAssembly.Hosting
@using System.Net
@inject ILogger<Einlesen> Logger

<h3>Programm im LST Format</h3>
<form @onsubmit="OnSubmit">
    <InputFile OnChange="@LoadFiles"></InputFile>
    <br>
    <button type="submit">Upload Selected File(s)</button>
</form>


@if (isLoading) {
    <p>Uploading...</p>
}
else {
        <ul>
     @foreach (var file in loadedFiles)
    {
        <li>
            <ul>
                <li>Name: @file.Name</li>
                <li>Last modified: @file.LastModified.ToString()</li>
                <li>Size (bytes): @file.Size</li>
                <li>Content type: @file.ContentType</li>
            </ul>
        </li>
    }
    </ul>
}

@code {
    private List<IBrowserFile> loadedFiles = new();
    private long maxFileSize = 1024 * 15;
    private int maxAllowedFiles = 3;
    private bool isLoading;

    private void LoadFiles(InputFileChangeEventArgs e)
    {
        isLoading = true;
        loadedFiles.Clear();

        foreach (var file in e.GetMultipleFiles(maxAllowedFiles))
        {
            try
            {
                Logger.LogInformation("Datei ausgew√§hlt");
                loadedFiles.Add(file);
            }
            catch (Exception ex)
            {
                Logger.LogError("File: {Filename} Error: {Error}",
                    file.Name, ex.Message);
            }
        }

        isLoading = false;
    }

    private async void OnSubmit()
    {
        foreach (var file in loadedFiles)
        {
            await using FileStream fs = new("geladenesProgramm", FileMode.Create);
            await file.OpenReadStream().CopyToAsync(fs);
            Logger.LogInformation("Upload abgeschlossen");
        }
    }

}